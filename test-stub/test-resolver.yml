# Not much can be tested with resolvers, as they don't produce
# any apparent result. We only check if lxml documentation
# examples wouldn't produce any error, and perform basic
# method checks.

- case: include_files
  skip: true
  files: &INC
    - path: myresolvers.py
      content: |
        # taken from lxml documentation examples
        from lxml import etree
        class DTDResolver(etree.Resolver):
          def resolve(self, url, id, context):
            print("Resolving URL '%s'" % url)
            return self.resolve_string(
              '<!ENTITY myentity "[resolved text: %s]">' % url, context)
        class PrefixResolver(etree.Resolver):
          def __init__(self, prefix):
            self.prefix = prefix
          def resolve(self, url, pubid, context):
            if url.startswith(self.prefix):
              print("Resolved url %s as prefix %s" % (url, self.prefix))
              return self.resolve_string(self.result_xml, context)
  main: |

- case: create_custom_resolver
  files: *INC
  parametrized:
    - cls: DTDResolver
      args: '()'
    - cls: PrefixResolver
      args: '(s)'
  main: |
    from myresolvers import {{cls}}
    s: str
    resolver = {{cls}}{{args}}

- case: registry_methods_goodargs
  files: *INC
  parametrized:
    - method: add
      args: '(d_resv)'
      rt: false
    - method: remove
      args: '(resolver=p_resv)'
      rt: false
    - method: copy
      args: '()'
      rt: '[\w\.]+\._ResolverRegistry'
  main: |
    from lxml.etree import XMLParser, _Element
    from myresolvers import DTDResolver, PrefixResolver
    d_resv: DTDResolver
    p_resv: PrefixResolver
    p: XMLParser[_Element]
    {{#rt}}result = {{/rt}}p.resolvers.{{method}}{{args}}
    {{#rt}}reveal_type(result)  # NR: Revealed type is "{{rt}}"{{/rt}}

- case: registry_methods_badargs
  files: *INC
  parametrized:
    - method: add
      args: '(1)'
      rt: false
      errtype: 'arg-type'
    - method: add
      args: '(d_resv, s)'
      rt: false
      errtype: 'call-arg'
    - method: remove
      args: '(badarg=p_resv)'
      rt: false
      errtype: 'call-arg'
    - method: remove
      args: '()'
      rt: false
      errtype: 'call-arg'
    - method: copy
      args: '(p_resv)'
      rt: true
      errtype: 'call-arg'
    - method: notexist
      args: '()'
      rt: true
      errtype: 'attr-defined'
  main: |
    from lxml.etree import XMLParser, _Element
    from myresolvers import DTDResolver, PrefixResolver
    d_resv: DTDResolver
    p_resv: PrefixResolver
    s: str
    p: XMLParser[_Element]
    {{#rt}}result = {{/rt}}p.resolvers.{{method}}{{args}}  # ER: .+ \[{{errtype}}]$
