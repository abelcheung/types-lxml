# For inclusion in another workflow only

name: Reusable test workflow

on:
  workflow_call:
    inputs:
      flavor:  # "normal" or "alt"
        required: true
        type: string

jobs:
  test-stub:
    strategy:
      fail-fast: false
      matrix:
        pyver:
          - "3.8"
          - "3.9"
          - "3.10"
          - "3.11"
          - "3.12"
          - "3.13"
        os:
          - "ubuntu-22.04"
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/download-artifact@v4
      with:
        name: dist-${{ inputs.flavor }}
        path: dist

    - name: Extract tarball
      shell: bash
      run: >
        tar -zxf dist/*.tar.gz --strip-components=1

    - uses: astral-sh/setup-uv@v3
      with:
        version: '0.4.27'
        enable-cache: true
        cache-dependency-glob: |
          ./pyproject.toml

    - name: Test stubs
      run: >
        uvx
        -p ${{ matrix.pyver }}
        --python-preference only-managed
        --with "tox-gh-actions == 3.2.0"
        tox@4.23.2 run -v
        --skip-env='.*-rt-.*'
        --result-json test-${{ inputs.flavor }}-stub-py${{ matrix.pyver }}.json

    - uses: actions/upload-artifact@v4
      with:
        name: log-${{ inputs.flavor }}-stub-py${{ matrix.pyver }}
        path: test-${{ inputs.flavor }}-stub-*.json
        if-no-files-found: error

  test-rt:
    strategy:
      fail-fast: false
      matrix:
        pyver:
          - "3.10"
          - "3.11"
          - "3.12"
          - "3.13"
        os:
          - ubuntu-22.04
          - windows-2022
          - macos-13
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/download-artifact@v4
      with:
        name: dist-${{ inputs.flavor }}
        path: dist

    - name: Extract tarball
      shell: bash
      run: >
        tar -zxf dist/*.tar.gz --strip-components=1

    - uses: astral-sh/setup-uv@v3
      with:
        version: '0.4.27'
        enable-cache: true
        cache-dependency-glob: |
          ./pyproject.toml

    # Trigger npm install pyright once, otherwise
    # tox run-parallel would cause multiple concurrent
    # installation into same location and fail
    # RobertCraigie/pyright-python#318
    - name: Install prerequisites
      run: |
        uv tool install -p ${{ matrix.pyver }} --python-preference only-managed --with "tox-gh-actions == 3.2.0" tox@4.23.2
        uvx tox run -e pyright -- --version

    - name: Test runtime
      run: >
        uvx
        tox run-parallel -vv
        --skip-env='.*-stub$'
        --result-json test-${{ inputs.flavor }}-rt-${{ matrix.os }}-py${{ matrix.pyver }}.json

    - uses: actions/upload-artifact@v4
      with:
        name: log-${{ inputs.flavor }}-rt-${{ matrix.os }}-py${{ matrix.pyver }}
        path: test-${{ inputs.flavor }}-rt-*.json
        if-no-files-found: error

  log-aggregation:
    if: ${{ always() }}
    needs: [test-stub, test-rt]
    runs-on: ubuntu-latest
    permissions:
      actions: write
    steps:

    - uses: actions/download-artifact@v4
      with:
        path: all-logs
        pattern: log-${{ inputs.flavor }}-*
        merge-multiple: true

    - uses: actions/upload-artifact@v4
      with:
        name: alllogs-${{ inputs.flavor }}
        path: all-logs
        if-no-files-found: error

    - uses: geekyeggo/delete-artifact@v5
      with:
        name: log-${{ inputs.flavor }}-*

