# For inclusion in another workflow only

name: Reusable test workflow

on:
  workflow_call:
    inputs:
      flavor:  # "normal" or "alt"
        required: true
        type: string

jobs:
  test-stub:
    strategy:
      fail-fast: false
      matrix:
        pyver:
          - "3.9"
          - "3.10"
          - "3.11"
          - "3.12"
          - "3.13"
          - "3.14t"
        os:
          - "ubuntu-24.04"
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/download-artifact@v5
      with:
        name: dist-${{ inputs.flavor }}
        path: dist

    - name: Extract tarball
      shell: bash
      run: >
        tar -zxf dist/*.tar.gz --strip-components=1

    - uses: astral-sh/setup-uv@v6
      with:
        version: '0.6.2'
        enable-cache: true
        cache-dependency-glob: |
          ./pyproject.toml

    # Glob not supported under default windows env
    - name: Determine wheel file name
      id: wheel-name
      shell: bash
      run: |
        echo "filename=$(echo dist/*.whl)" >> "$GITHUB_OUTPUT"

    - name: Test stubs
      run: >
        uvx
        -p ${{ matrix.pyver }}
        --python-preference only-managed
        --with "tox-gh-actions == 3.2.0"
        --with tox-uv
        tox run -v
        --skip-env='.*-rt-.*'
        --installpkg ${{ steps.wheel-name.outputs.filename }}
        --result-json test-${{ inputs.flavor }}-stub-py${{ matrix.pyver }}.json

    - uses: actions/upload-artifact@v4
      with:
        name: log-${{ inputs.flavor }}-stub-py${{ matrix.pyver }}
        path: test-${{ inputs.flavor }}-stub-*.json
        if-no-files-found: error

  test-rt:
    strategy:
      fail-fast: false
      matrix:
        pyver:
          - "3.10"
          - "3.11"
          - "3.12"
          - "3.13"
          - "3.14t"
        os:
          - ubuntu-24.04
          - windows-2025
          - macos-14
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/download-artifact@v5
      with:
        name: dist-${{ inputs.flavor }}
        path: dist

    - name: Extract tarball
      shell: bash
      run: >
        tar -zxf dist/*.tar.gz --strip-components=1

    - uses: astral-sh/setup-uv@v6
      with:
        version: '0.6.2'
        enable-cache: true
        cache-dependency-glob: |
          ./pyproject.toml

    - name: Install prerequisites
      run: >
        uv tool install
        -p ${{ matrix.pyver }}
        --python-preference only-managed
        --with "tox-gh-actions == 3.2.0"
        --with tox-uv
        tox

    # Glob not supported under default windows env
    - name: Determine wheel file name
      id: wheel-name
      shell: bash
      run: |
        echo "filename=$(echo dist/*.whl)" >> "$GITHUB_OUTPUT"

    - name: Test runtime
      run: >
        uvx
        tox run-parallel
        --skip-env='.*-stub$'
        --installpkg ${{ steps.wheel-name.outputs.filename }}
        --result-json test-${{ inputs.flavor }}-rt-${{ matrix.os }}-py${{ matrix.pyver }}.json

    - uses: actions/upload-artifact@v4
      with:
        name: log-${{ inputs.flavor }}-rt-${{ matrix.os }}-py${{ matrix.pyver }}
        path: test-${{ inputs.flavor }}-rt-*.json
        if-no-files-found: error

  log-aggregation:
    if: success() || failure()
    needs: [test-stub, test-rt]
    runs-on: ubuntu-24.04
    permissions:
      actions: write
    steps:

    - uses: actions/download-artifact@v5
      with:
        path: all-logs
        pattern: log-${{ inputs.flavor }}-*
        merge-multiple: true

    - uses: actions/upload-artifact@v4
      with:
        name: alllogs-${{ inputs.flavor }}
        path: all-logs
        if-no-files-found: error

    - uses: geekyeggo/delete-artifact@v5
      with:
        name: log-${{ inputs.flavor }}-*

