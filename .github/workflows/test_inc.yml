# For inclusion in another workflow only

name: Reusable test workflow

on:
  workflow_call:
    inputs:
      gitref:
        required: false
        type: string
      artifact:
        required: false
        type: string

jobs:
  test-stub:
    strategy:
      fail-fast: false
      matrix:
        pyver:
          - "3.8"
          - "3.9"
          - "3.10"
          - "3.11"
          - "3.12"
        os:
          - "ubuntu-22.04"
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v4
      if: ${{ inputs.gitref }}
      with:
        ref: ${{ inputs.gitref }}
        fetch-depth: 0

    - uses: actions/download-artifact@v4
      id: dl-artifact
      if: ${{ inputs.artifact }}
      with:
        name: ${{ inputs.artifact }}
        path: dist

    - name: Extract tarball
      if: ${{ success() && steps.dl-artifact.conclusion == 'success' }}
      shell: bash
      run: >
        tar -zxf dist/*.tar.gz --strip-components=1

    - uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.pyver }}
        cache: 'pip'

    - name: Install prerequisites
      run: >
        pip install --progress-bar=off -v
        "tox-gh-actions == 3.2.0"

    - name: Test stubs
      run: >
        tox run -v
        --skip-env='.*-rt-.*'
        --result-json test-stub-py${{ matrix.pyver }}.json

    - name: Upload log artifact
      uses: actions/upload-artifact@v4
      with:
        name: log-stub-py${{ matrix.pyver }}
        path: test-stub-*.json
        if-no-files-found: error

  test-rt:
    strategy:
      fail-fast: false
      matrix:
        pyver:
          - "3.10"
          - "3.11"
          - "3.12"
        os:
          - ubuntu-22.04
          # - windows-2022  # tox refuse to quit
          - macos-13
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v4
      if: ${{ inputs.gitref }}
      with:
        ref: ${{ inputs.gitref }}
        fetch-depth: 0

    - uses: actions/download-artifact@v4
      id: dl-artifact
      if: ${{ inputs.artifact }}
      with:
        name: ${{ inputs.artifact }}
        path: dist

    - name: Extract tarball
      if: ${{ success() && steps.dl-artifact.conclusion == 'success' }}
      shell: bash
      run: >
        tar -zxf dist/*.tar.gz --strip-components=1

    - uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.pyver }}
        cache: 'pip'

    - name: Install prerequisites
      run: >
        pip install --progress-bar=off -v
        "tox-gh-actions == 3.2.0"

    - name: Test runtime
      run: >
        tox run -v
        --skip-env='.*-stub$'
        --result-json test-rt-${{ matrix.os }}-py${{ matrix.pyver }}.json

    - name: Upload log artifact
      uses: actions/upload-artifact@v4
      with:
        name: log-rt-${{ matrix.os }}-py${{ matrix.pyver }}
        path: test-rt-*.json
        if-no-files-found: error

  log-aggregation:
    if: ${{ always() }}
    needs: [test-stub, test-rt]
    runs-on: ubuntu-latest
    permissions:
      actions: write
    steps:

    - name: Download logs
      uses: actions/download-artifact@v4
      with:
        path: all-logs
        pattern: log-*
        merge-multiple: true

    - name: Upload logs
      uses: actions/upload-artifact@v4
      with:
        name: all-logs
        path: all-logs
        if-no-files-found: error

    - name: Remove individual logs
      uses: geekyeggo/delete-artifact@v5
      with:
        name: log-*
