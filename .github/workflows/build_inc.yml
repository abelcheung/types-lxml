# For inclusion in another workflow only

name: Reusable build workflow

on:
  workflow_call:
    inputs:
      gitref:
        required: false
        type: string
        default: ${{ github.ref }}

jobs:
  build:
    strategy:
      matrix:
        flavor:
          - "normal"
          - "alt"
    runs-on: ubuntu-22.04
    steps:
    - uses: actions/checkout@v4
      with:
        ref: ${{ inputs.gitref }}
        fetch-depth: 0  # detect tagged ver in repo

    - uses: astral-sh/setup-uv@v5
      with:
        version: '0.4.27'
        enable-cache: true
        cache-dependency-glob: |
          ./pyproject.toml

    - name: Build flavor ${{ matrix.flavor }}
      if: ( ! startsWith(inputs.gitref, 'refs/tags/') )
      run: >
        uvx
        --python-preference only-system
        --with tox-uv
        tox@4.23.2
        run -v
        -e build-${{ matrix.flavor }}

    - name: Build tagged flavor ${{ matrix.flavor }}
      if: startsWith(inputs.gitref, 'refs/tags/')
      env:
        PDM_BUILD_SCM_VERSION: ${{ github.ref_name }}
      run: >
        uvx
        --python-preference only-system
        --with tox-uv
        tox@4.23.2
        run -v
        -e build-${{ matrix.flavor }}

    - uses: actions/upload-artifact@v4
      with:
        name: dist-${{ matrix.flavor }}
        path: dist/*
        if-no-files-found: error

  checksrc:
    needs: build
    strategy:
      matrix:
        flavor:
          - "normal"
          - "alt"
    runs-on: ubuntu-22.04
    steps:
    - uses: actions/download-artifact@v4
      with:
        name: dist-${{ matrix.flavor }}
        path: dist

    - name: Extract tarball
      shell: bash
      run: >
        tar -zxf dist/*.tar.gz --strip-components=1

    - uses: astral-sh/setup-uv@v5
      with:
        version: '0.4.27'
        enable-cache: true
        cache-dependency-glob: |
          ./pyproject.toml

    - name: Run type checker on source
      run: >
        uvx
        --python-preference only-system
        --with tox-uv
        tox@4.23.2
        run-parallel -vv
        -m typecheck

