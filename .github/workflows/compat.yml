name: Type checker compatibility tests

on:
  - workflow_dispatch

jobs:
  mypy_compat:
    strategy:
      fail-fast: false
      matrix:
        myver:
          - 1.10.0
          - 1.10.1
          - 1.11.0
          - 1.11.1
          - 1.11.2
          - 1.12.0
          - 1.12.1
          - 1.13.0
          - 1.14.0
          - 1.14.1
          - 1.15.0
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4

      - uses: astral-sh/setup-uv@v5
        with:
          version: '0.6.2'
          enable-cache: true
          cache-dependency-glob: |
            ./pyproject.toml

      - name: Install prerequisites
        run: |
          uv venv --python-preference only-system
          uv pip install -r pyproject.toml
          uv pip install 'mypy == ${{ matrix.myver }}'

      - name: Perform type check
        run: |
          source .venv/bin/activate
          mypy

  pyright_compat:
    strategy:
      fail-fast: false
      matrix:
        prver:
          - 1.1.350
          - 1.1.351
          - 1.1.352
          - 1.1.353
          - 1.1.354
          - 1.1.355
          - 1.1.356
          - 1.1.357
          - 1.1.358
          - 1.1.359
          - 1.1.360
          - 1.1.361
          - 1.1.362
          - 1.1.363
          - 1.1.364
          - 1.1.365
          - 1.1.366
          - 1.1.367
          - 1.1.368
          - 1.1.369
          - 1.1.370
          - 1.1.371
          - 1.1.372
          - 1.1.373
          - 1.1.374
          - 1.1.375
          - 1.1.376
          - 1.1.377
          - 1.1.378
          - 1.1.379
          - 1.1.380
          - 1.1.381
          - 1.1.382
          - 1.1.383
          - 1.1.384
          - 1.1.385
          - 1.1.386
          - 1.1.387
          - 1.1.388
          - 1.1.389
          - 1.1.390
          - 1.1.391
          - 1.1.392
          - 1.1.393
          - 1.1.394
          - 1.1.395
          - 1.1.396
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4

      - uses: astral-sh/setup-uv@v5
        with:
          version: '0.6.2'
          enable-cache: true
          cache-dependency-glob: |
            ./pyproject.toml

      - name: Install prerequisites
        run: |
          uv venv -p 3.10 --python-preference only-system
          uv pip install -r pyproject.toml

      # HACK Only pyright 1.1.386+ is capable of parsing
      # current pyproject.toml which incorporated tox
      # config. Generate pyright config on-the-fly to
      # make sure pyright compatibility check is not
      # hindered by config issues.

      - uses: actions/setup-node@v4
        with:
          node-version: '20'
      - run: npm install js-toml

      - name: Generate pyright config
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const toml = require('js-toml');

            fs.readFile('pyproject.toml', 'utf-8', (err, data) => {
              if (err) {
                console.error('Error reading pyproject.toml:', err);
                process.exit(1);
              }

              const config = toml.load(data);
              const outData = JSON.stringify(config.tool.pyright, null, 2)

              fs.writeFile('pyrightconfig.json', outData, (err) => {
                if (err) {
                  console.error('Error writing pyrightconfig.json:', err);
                  process.exit(1);
                }
                core.startGroup('Data written to pyrightconfig.json');
                console.log(outData);
                core.endGroup();
              });
            });

      - uses: jakebailey/pyright-action@v2
        with:
          version: ${{ matrix.prver }}
          python-path: .venv/bin/python
          extra-args: src


  basedpyright_compat:
    strategy:
      fail-fast: false
      matrix:
        bpr-ver:
          - '1.20.0'
          - '1.21.0'
          - '1.21.1'
          - '1.22.0'
          - '1.22.1'
          - '1.23.0'
          - '1.23.1'
          - '1.23.2'
          - '1.24.0'
          - '1.25.0'
          - '1.26.0'
          - '1.27.0'
          - '1.27.1'
          - '1.28.0'
          - '1.28.1'
    runs-on: 'ubuntu-24.04'
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install prerequisite node modules
        run: npm install 'smol-toml@1.3.1'

      - name: Generate pyright config
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const toml = require('smol-toml');

            fs.readFile('pyproject.toml', 'utf-8', (err, data) => {
              if (err) {
                console.error('Error reading pyproject.toml:', err);
                process.exit(1);
              }

              const config = toml.parse(data);
              const outData = JSON.stringify(config.tool.pyright, null, 2)

              fs.writeFile('pyrightconfig.json', outData, (err) => {
                if (err) {
                  console.error('Error writing pyrightconfig.json:', err);
                  process.exit(1);
                }
                core.startGroup('Data written to pyrightconfig.json');
                console.log(outData);
                core.endGroup();
              });
            });

      - uses: astral-sh/setup-uv@v5
        with:
          version: '0.6.2'
          cache-dependency-glob: |
            ./pyproject.toml

      - name: Install prerequisite python packages
        run: |
          uv venv -p 3.12 --python-preference only-managed
          uv pip install -r pyproject.toml
          uv pip install "basedpyright==${{ matrix.bpr-ver }}"

      - name: Run basedpyright
        run: >
          .venv/bin/basedpyright
          --config pyrightconfig.json
          --level error
          src
