[tox]
min_version = 4.0
env_list = py{38,39,310,311,312,313}-stub, py{310,311,312}-rt-lxml{49,50,51,52,53}, py313-rt-lxml53
requires =
    tox-gh-actions ~= 3.1

[gh-actions]
python =
    3.8: py38
    3.9: py39
    3.10: py310
    3.11: py311
    3.12: py312
    3.13: py313

[common_dep]
deps =
    types-beautifulsoup4 == 4.12.0.20240907
    typing_extensions == 4.12.2
    cssselect == 1.2.0

[testenv:py{38,39,310,311,312,313}-stub]
deps =
    {[testenv:mypy]deps}
    pytest-mypy-plugins == 3.1.2
    .
commands =
    pytest --mypy-ini-file=test-stub/mypy-pytest.ini {posargs:test-stub}

# Although mypy 1.10 itself produce no problem in stub,
# it is basically unusable for real life code that uses lxml,
# not until following improvement is done in 1.11.
# https://mypy.readthedocs.io/en/stable/changelog.html#type-inference-improvements
# So runtime test requires 1.11 instead

[testenv:py{310,311,312}-rt-lxml{49,50,51,52,53},py313-rt-lxml53]
deps =
    {[testenv:pyright]deps}
    mypy == 1.11.2
    typeguard == 4.3.0
    pytest == 8.3.3
    html5lib == 1.1
    beautifulsoup4 == 4.12.3
    py{310,311,312}-rt-lxml49: lxml == 4.9.*
    py{310,311,312}-rt-lxml50: lxml == 5.0.*
    py{310,311,312}-rt-lxml51: lxml == 5.1.*
    py{310,311,312}-rt-lxml52: lxml == 5.2.*
    py{310,311,312,313}-rt-lxml53: lxml == 5.3.*
setenv =
    PYTHONUTF8 = 1
package = editable
change_dir = {tox_root}/test-rt
# Mypy command line doesn't know how to dump to file or
# discard output, and tox doesn't support shell
# semantics, that's why we resort to mypy.api
# Besides, mypy exit code becomes 1 unconditionally when
# JSON output is desired, so just test text output
commands =
    pyright --level error
    python -c 'from mypy.api import run;r=run(["--config-file=rttest-mypy.ini","."]);exit(r[2])'
    pytest {posargs:}

[testenv:mypy]
deps =
    {[common_dep]deps}
    mypy == 1.10.1
package = skip
commands = mypy {posargs:} lxml-stubs

[testenv:pyright]
deps =
    {[common_dep]deps}
    pyright == 1.1.384
package = skip
commands = pyright {posargs:}

[testenv:build-normal]
passenv =
    PDM_BUILD_SCM_VERSION
deps =
    build
package = skip
commands = python -m build {posargs:}

[testenv:build-alt]
passenv =
    PDM_BUILD_SCM_VERSION
deps =
    build
package = skip
allowlist_externals =
    git
commands =
    git apply multi-subclass.patch
    python -m build {posargs:}
    git apply -R multi-subclass.patch

